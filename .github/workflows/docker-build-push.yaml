name: Build and Push Docker Images

on:
   push:
      branches:
         - main

# env:
#    IMAGE_NAME_SERVER: adamb00/rr-server
#    IMAGE_NAME_CLIENT: adamb00/rr-client
#    TAG_NAME: latest

jobs:
   build-and-push:
      runs-on: ubuntu-latest

      steps:
         - name: Checkout repository
           uses: actions/checkout@v2

         - name: Login to Docker Hub
           uses: docker/login-action@v2
           with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

         - name: Set up Docker Buildx
           uses: docker/setup-buildx-action@v1

         - name: Build Docker Images
           run: docker-compose build

         - name: Push Docker Images
           run: docker-compose push

         # - name: Build and push Docker images for server
         #   run: |
         #      echo "${{ secrets.ENV_FILE }}" >> $GITHUB_ENV
         #      docker build --build-arg NODE_ENV=production -t $IMAGE_NAME_SERVER:$TAG_NAME ./server
         #      docker push $IMAGE_NAME_SERVER:$TAG_NAME

         # - name: Build and push Docker images for client
         #   run: |
         #      docker build \
         #       --build-arg VITE_NODE_ENV=production \
         #       --build-arg VITE_FACEBOOK_APP_ID=${{secrets.VITE_FACEBOOK_APP_ID}} \
         #       --build-arg VITE_BASE_URL_SOCKET=${{secrets.VITE_BASE_URL_SOCKET}} \
         #       --build-arg VITE_BASE_URL=${{secrets.VITE_BASE_URL}} \
         #       --build-arg VITE_BASE_URL_LINK=${{secrets.VITE_BASE_URL_LINK}} \
         #       -t $IMAGE_NAME_CLIENT:$TAG_NAME ./client
         #      docker push $IMAGE_NAME_CLIENT:$TAG_NAME
   deploy:
      runs-on: ubuntu-latest
      needs: build-and-push
      steps:
         - uses: actions/checkout@v2
           with:
              fetch-depth: 2

         - name: Install Composer Dependencies
           run: composer install --prefer-dist --no-progress --no-suggest

         - name: npm install
           run: npm install

         - name: npm run bundle
           run: npm run bundle

         - name: FTP Deploy to WP Engine (Production)
           uses: SamKirkland/FTP-Deploy-Action@3.1.1
           with:
              ftp-server: ftp.r2fittshop.hu:21
              ftp-username: r2byouFTPUs3r24@r2byou.com
              ftp-password: W1Hye4ic9I27MNZ
   # deploy-to-digitalocean:
   #    runs-on: ubuntu-latest
   #    needs: build-and-push

   #    steps:
   #       - name: Checkout repository
   #         uses: actions/checkout@v2

   #       - name: SSH into DigitalOcean droplet
   #         uses: appleboy/ssh-action@master
   #         with:
   #            host: ${{ secrets.DROPLET_HOST }}
   #            username: ${{ secrets.DROPLET_USERNAME }}
   #            key: ${{ secrets.DROPLET_SSH_KEY }}
   #            port: ${{ secrets.DROPLET_SSH_PORT }}
   #            passphrase: ${{ secrets.SSH_PASSPHRASE }}
   #            script: |
   #               echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

   #               docker stop $(docker ps -q)
   #               docker rm $(docker ps -a -q)

   #               docker pull adamb00/rr-server:latest
   #               docker pull adamb00/rr-client:latest

   #               docker run -d -p 8000:8000 --env-file /root/.env adamb00/rr-server:latest
   #               docker run -d -p 5173:80 --env-file /root/.env.client adamb00/rr-client:latest
