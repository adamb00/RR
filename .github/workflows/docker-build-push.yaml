name: Build and Push Docker Images

on:
   push:
      branches:
         - main

env:
   IMAGE_NAME_SERVER: adamb00/rr-server
   IMAGE_NAME_CLIENT: adamb00/rr-client
   TAG_NAME: latest

jobs:
   build-and-push:
      runs-on: ubuntu-latest

      steps:
         - name: Checkout repository
           uses: actions/checkout@v2

         - name: Login to Docker Hub
           uses: docker/login-action@v2
           with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

         - name: Set up Docker Buildx
           uses: docker/setup-buildx-action@v1

         - name: Build and push Docker for server
           run: |
              docker-compose -p rr-container -f docker-compose.yaml build \
                --build-arg VITE_NODE_ENV=production \
                --build-arg VITE_FACEBOOK_APP_ID=${{secrets.VITE_FACEBOOK_APP_ID}} \
                --build-arg VITE_BASE_URL_SOCKET=${{secrets.VITE_BASE_URL_SOCKET}} \
                --build-arg VITE_BASE_URL=${{secrets.VITE_BASE_URL}} \
                --build-arg VITE_BASE_URL_LINK=${{secrets.VITE_BASE_URL_LINK}} \
                --build-arg MONGO_PWD=${{ secrets.MONGO_PWD }} \
                --build-arg MONGO_DB=${{ secrets.MONGO_DB }} \
                --build-arg EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }} \
                --build-arg EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} \
                --build-arg EMAIL_FROM=${{ secrets.EMAIL_FROM }} \
                --build-arg EMAIL_HOST=${{ secrets.EMAIL_HOST }} \
                --build-arg EMAIL_PORT=${{ secrets.EMAIL_PORT }} \
                --build-arg EMAIL_CLIENT_ID=${{ secrets.EMAIL_CLIENT_ID }} \
                --build-arg EMAIL_CLIENT_SECRET=${{ secrets.EMAIL_CLIENT_SECRET }} \
                --build-arg EMAIL_REFRESH_TOKEN=${{ secrets.EMAIL_REFRESH_TOKEN }} \
                --build-arg EMAIL_ACCESS_TOKEN=${{ secrets.EMAIL_ACCESS_TOKEN }} \
                --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} \
                --build-arg JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }} \
                --build-arg FACEBOOK_ID=${{ secrets.FACEBOOK_ID }} \
                --build-arg FACEBOOK_SECRET=${{ secrets.FACEBOOK_SECRET }} \
                --build-arg FACEBOOK_CALLBACK_URL=${{ secrets.FACEBOOK_CALLBACK_URL }} \
                --build-arg AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} \
                --build-arg AWS_BUCKET_REGION=${{ secrets.AWS_BUCKET_REGION }} \
                --build-arg AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
                --build-arg AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} 
              docker-compose -p rr-container -f docker-compose.yaml push

           # - name: Build and push Docker images for server
           #   run: |
           #      docker build -t $IMAGE_NAME_SERVER:$TAG_NAME ./server
           #      docker push $IMAGE_NAME_SERVER:$TAG_NAME

           # - name: Build and push Docker images for client
           #   run: |
           #      docker build \
           #       --build-arg VITE_NODE_ENV=production \
           #       --build-arg VITE_FACEBOOK_APP_ID=${{secrets.VITE_FACEBOOK_APP_ID}} \
           #       --build-arg VITE_BASE_URL_SOCKET=${{secrets.VITE_BASE_URL_SOCKET}} \
           #       --build-arg VITE_BASE_URL=${{secrets.VITE_BASE_URL}} \
           #       --build-arg VITE_BASE_URL_LINK=${{secrets.VITE_BASE_URL_LINK}} \
           #       -t $IMAGE_NAME_CLIENT:$TAG_NAME ./client
           #      docker push $IMAGE_NAME_CLIENT:$TAG_NAME

      # deploy-to-digitalocean:
      #    runs-on: ubuntu-latest
      #    needs: build-and-push

      #    steps:
      #       - name: Checkout repository
      #         uses: actions/checkout@v2

      #       - name: SSH into DigitalOcean droplet
      #         uses: appleboy/ssh-action@master
      #         with:
      #            host: ${{ secrets.DROPLET_HOST }}
      #            username: ${{ secrets.DROPLET_USERNAME }}
      #            key: ${{ secrets.DROPLET_SSH_KEY }}
      #            port: ${{ secrets.DROPLET_SSH_PORT }}
      #            passphrase: ${{ secrets.SSH_PASSPHRASE }}
      #            script: |
      #               echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      #               docker stop $(docker ps -q)
      #               docker rm $(docker ps -a -q)

# <<<<<<< HEAD
#                  docker run -d -p 8000:8000 --env-file /root/.env adamb00/rr-server:latest
#                  docker run -d  adamb00/rr-client:latest

#               #   scp -r ./dist ${{secrets.DROPLET_USERNAME}}@${{secrets.DROPLET_HOST}}:/var/www/r2byou.com/html

# =======
#    #               docker pull adamb00/rr-server:latest
#    #               docker pull adamb00/rr-client:latest

#    #               docker run -d -p 8000:8000 --env-file /root/.env adamb00/rr-server:latest
#    #               docker run -d  adamb00/rr-client:latest
# >>>>>>> d6f80fe (Test)
# web-deploy:
#                name: ðŸŽ‰ Deploy
#                runs-on: ubuntu-latest
#                needs: build-and-push
#                steps:
#                   - name: ðŸšš Get latest code
#                   uses: actions/checkout@v4

#                   - name: ðŸ“‚ Sync files
#                   uses: SamKirkland/FTP-Deploy-Action@v4.3.5
#                   with:
#                      server: ftp.r2fittshop.hu
#                      username: r2byouFTPUs3r24@r2byou.com
#                      port: 21
#                      password: ${{ secrets.FTP_PASSWORD }}

#   docker run -d -p 8000:8000 --env-file /root/.env adamb00/rr-server:latest
#   docker run -d -p 80:4173 -p 443:4173 --env-file /root/.env.client adamb00/rr-client:latest
#   docker run -d -p 80:4173 --env-file /root/.env.client adamb00/rr-client:latest

# --build-arg MONGO_PWD=${{ secrets.MONGO_PWD }} \
# --build-arg MONGO_DB=${{ secrets.MONGO_DB }} \
# --build-arg EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }} \
# --build-arg EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} \
# --build-arg EMAIL_FROM=${{ secrets.EMAIL_FROM }} \
# --build-arg EMAIL_HOST=${{ secrets.EMAIL_HOST }} \
# --build-arg EMAIL_PORT=${{ secrets.EMAIL_PORT }} \
# --build-arg EMAIL_CLIENT_ID=${{ secrets.EMAIL_CLIENT_ID }} \
# --build-arg EMAIL_CLIENT_SECRET=${{ secrets.EMAIL_CLIENT_SECRET }} \
# --build-arg EMAIL_REFRESH_TOKEN=${{ secrets.EMAIL_REFRESH_TOKEN }} \
# --build-arg EMAIL_ACCESS_TOKEN=${{ secrets.EMAIL_ACCESS_TOKEN }} \
# --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} \
# --build-arg JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }} \
# --build-arg FACEBOOK_ID=${{ secrets.FACEBOOK_ID }} \
# --build-arg FACEBOOK_SECRET=${{ secrets.FACEBOOK_SECRET }} \
# --build-arg FACEBOOK_CALLBACK_URL=${{ secrets.FACEBOOK_CALLBACK_URL }} \
# --build-arg AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} \
# --build-arg AWS_BUCKET_REGION=${{ secrets.AWS_BUCKET_REGION }} \
# --build-arg AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
# --build-arg AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \
