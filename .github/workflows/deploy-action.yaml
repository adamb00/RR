name: pipeline
on:
   push:
      branches:
         - 'main'

env:
   REGISTRY: 'registry.digitalocean.com/rr-registry'
   IMAGE_NAME_FRONTEND: 'frontend:latest'
   IMAGE_NAME_BACKEND: 'backend:latest'

jobs:
   build-and-push:
      runs-on: ubuntu-latest
      steps:
         - name: Checkout the repo
           uses: actions/checkout@v2
         # - name: Create env file
         #   run: |
         #      touch .env
         #      echo "${{ secrets.SERVER_ENV_PROD }}" > .env
         #      cat .env

         - name: Remove previous images
           run: |
              docker compose -f docker-compose.yaml down
              docker rmi $(docker images -q) || true

         - name: Remove previous images from DO Container Registry
           run: |
              doctl registry repository delete $REGISTRY/$IMAGE_NAME_FRONTEND || true
              doctl registry repository delete $REGISTRY/$IMAGE_NAME_BACKEND || true

         - name: Build image
           run: docker compose -f docker-compose.yaml build

         - name: Install doctl
           uses: digitalocean/action-doctl@v2
           with:
              token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

         - name: Log in to DO Container Registry
           run: doctl registry login --expiry-seconds 600

         - name: Push image to DO Container Registry
           run: docker compose -f docker-compose.yaml push
   deploy-to-digitalocean:
      runs-on: ubuntu-latest
      needs: build-and-push
      steps:
         - name: Checkout repository
           uses: actions/checkout@v2

         - name: SSH into DigitalOcean droplet
           uses: appleboy/ssh-action@master
           with:
              host: ${{ secrets.DROPLET_HOST }}
              username: ${{ secrets.DROPLET_USERNAME }}
              key: ${{ secrets.DROPLET_SSH_KEY }}
              port: ${{ secrets.DROPLET_SSH_PORT }}
              passphrase: ${{ secrets.SSH_PASSPHRASE }}
              script: |
                 echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

                 docker pull $REGISTRY/$IMAGE_NAME_FRONTEND
                 docker pull $REGISTRY/$IMAGE_NAME_BACKEND

                 docker run -d \
                 --name $IMAGE_NAME_FRONTEND \
                 $REGISTRY/$IMAGE_NAME_FRONTEND:${{ github.sha }} || true

                 docker run -d \
                 --name $IMAGE_NAME_BACKEND \
                 $REGISTRY/$IMAGE_NAME_BACKEND:${{ github.sha }} || true

              #   docker run -d -p 8000:8000 --env-file /root/.env adamb00/rr-server:latest
              #   docker run -d adamb00/rr-client:latest
