name: pipeline
on:
   push:
      branches:
         - 'main'

env:
   REGISTRY: 'adamb00'
   IMAGE_NAME: 'r2byou'

jobs:
   build_and_push:
      runs-on: ubuntu-latest
      steps:
         - name: Checkout repository
           uses: actions/checkout@v2

         - name: Login to Docker Hub
           uses: docker/login-action@v2
           with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

         - name: Set up Docker Buildx
           uses: docker/setup-buildx-action@v1

         - name: Build and push Docker images
           run: |
              docker-compose build
              docker-compose push

   deploy-to-digitalocean:
      runs-on: ubuntu-latest
      needs: build_and_push
      steps:
         - name: Checkout repository
           uses: actions/checkout@v2

         - name: Copy docker-compose.yml to droplet
           uses: appleboy/scp-action@master
           with:
              host: ${{ secrets.DROPLET_HOST }}
              username: ${{ secrets.DROPLET_USERNAME }}
              key: ${{ secrets.DROPLET_SSH_KEY }}
              port: ${{ secrets.DROPLET_SSH_PORT }}
              source: docker-compose.yml
              target: /home/${{ secrets.DROPLET_USERNAME }}/docker-compose/docker-compose.yml

         # - name: SSH into DigitalOcean droplet
         #   uses: appleboy/ssh-action@master
         #   with:
         #      host: ${{ secrets.DROPLET_HOST }}
         #      username: ${{ secrets.DROPLET_USERNAME }}
         #      key: ${{ secrets.DROPLET_SSH_KEY }}
         #      port: ${{ secrets.DROPLET_SSH_PORT }}
         #      passphrase: ${{ secrets.SSH_PASSPHRASE }}
         #      script: |
         #         echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

         #         docker pull $REGISTRY/$IMAGE_NAME
         #         docker stop $IMAGE_NAME || true
         #         docker rm $IMAGE_NAME || true
# env:
#    REGISTRY: 'registry.digitalocean.com/rr-registry'
#    IMAGE_NAME_FRONTEND: 'frontend:latest'
#    IMAGE_NAME_BACKEND: 'backend:latest'

# jobs:
#    build-and-push:
#       runs-on: ubuntu-latest
#       steps:
#          - name: Checkout the repo
#            uses: actions/checkout@v2
#          - name: Install doctl
#            uses: digitalocean/action-doctl@v2
#            with:
#               token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#          - name: Remove old images from Container Registry
#            uses: henrik242/docr-image-remove@v1
#            with:
#               image_repository: $REGISTRY
#               buffer_size: 10

#          - name: Build image
#            run: docker compose -f docker-compose.yaml build

#          - name: Install doctl
#            uses: digitalocean/action-doctl@v2
#            with:
#               token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

#          - name: Log in to DO Container Registry
#            run: doctl registry login --expiry-seconds 600

#          - name: Push image to DO Container Registry
#            run: docker compose -f docker-compose.yaml push

#    deploy-to-digitalocean:
#       runs-on: ubuntu-latest
#       needs: build-and-push
#       steps:
#          - name: Checkout repository
#            uses: actions/checkout@v2

#          - name: SSH into DigitalOcean droplet
#            uses: appleboy/ssh-action@master
#            with:
#               host: ${{ secrets.DROPLET_HOST }}
#               username: ${{ secrets.DROPLET_USERNAME }}
#               key: ${{ secrets.DROPLET_SSH_KEY }}
#               port: ${{ secrets.DROPLET_SSH_PORT }}
#               passphrase: ${{ secrets.SSH_PASSPHRASE }}
#               script: |
#                  echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

#                  docker stop $(docker ps -q)
#                  docker rm $(docker ps -a -q)

#                  docker pull registry.digitalocean.com/rr-registry/frontend:latest
#                  docker pull registry.digitalocean.com/rr-registry/backend:latest
#                  docker pull registry.digitalocean.com/rr-registry/admin:latest

#                  docker run -d --name admin registry.digitalocean.com/rr-registry/admin:latest
#                  docker run -d --name frontend registry.digitalocean.com/rr-registry/frontend:latest
#                  docker run -d --name backend -p 8000:8000 --env-file /root/.env registry.digitalocean.com/rr-registry/backend:latest

#                  docker cp admin:/var/www/admin.r2byou.com/html /var/www/admin.r2byou.com
#                  docker cp frontend:/var/www/r2byou.com/html /var/www/r2byou.com
